steps:
  # Get latest version
  - name: "us-central1-docker.pkg.dev/${PROJECT_ID}/docker/github-ops-builder"
    args: [
        "--action",
        "get-version",
        "--repo-owner",
        "${_REPO_OWNER}",
        "--repo-name",
        "ansible-openvpn", # adjust this to your repo name
      ]
    secretEnv: ["GITHUB_TOKEN"]
    id: "get-version"

  # Process PR info and bump version
  - name: "us-central1-docker.pkg.dev/${PROJECT_ID}/docker/github-ops-builder"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        VERSION_TYPE="${_PR_TYPE}"
        if [ -z "${_PR_TYPE}" ]; then
          VERSION_TYPE="timestamp"
        fi

        python /usr/local/bin/cli.py \
          --action bump-version \
          --repo-owner ${_REPO_OWNER} \
          --repo-name ansible-openvpn \
          --current-version "$$(cat current_version.txt)" \
          --version-type "$${VERSION_TYPE}" \
          --is-merge "${_IS_MERGE}" \
          --pr-number "${_PR_NUMBER}"
    secretEnv: ["GITHUB_TOKEN"]
    id: "bump-version"
    waitFor: ["get-version"]

  # Build the image using make
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:latest"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        # Install build deps
        apt-get update && apt-get install -y make curl unzip

        # Install packer
        curl -fsSL https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
        apt-get update && apt-get install -y packer

        # Build the image
        make build-image IMAGE_VERSION="$$(cat new_version.txt)" GCP_PROJECT=${PROJECT_ID}
    id: "build-image"
    waitFor: ["bump-version"]

  # Create GitHub release
  - name: "us-central1-docker.pkg.dev/${PROJECT_ID}/docker/github-ops-builder"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        VERSION=$(cat new_version.txt)
        if [[ "${_IS_MERGE}" != "true" ]]; then
          python /usr/local/bin/cli.py \
            --action create-release \
            --repo-owner ${_REPO_OWNER} \
            --repo-name ansible-openvpn \
            --current-version "$${VERSION}" \
            --is-draft \
            --skip-asset
        else
          python /usr/local/bin/cli.py \
            --action create-release \
            --repo-owner ${_REPO_OWNER} \
            --repo-name ansible-openvpn \
            --current-version "$${VERSION}" \
            --skip-asset
        fi
    secretEnv: ["GITHUB_TOKEN"]
    waitFor: ["build-image"]
    id: "create-release"

  # Update parent repo submodule (if needed)
  - name: "us-central1-docker.pkg.dev/${PROJECT_ID}/docker/github-ops-builder"
    args:
      [
        "--action",
        "update-submodule",
        "--repo-owner",
        "${_REPO_OWNER}",
        "--repo-name",
        "ansible-openvpn",
        "--parent-repo",
        "${_PARENT_REPO}",
        "--submodule-path",
        "${_SUBMODULE_PATH}",
        "--current-version",
        "$$(cat new_version.txt)",
        "--is-merge",
        "${_IS_MERGE}",
      ]
    secretEnv: ["GITHUB_TOKEN"]
    id: "update-submodule"
    waitFor: ["create-release"]

substitutions:
  _LOCATION: us-central1
  _REPO_OWNER: ""
  _PR_TYPE: ""
  _IS_MERGE: "false"
  _PR_NUMBER: ""
  _PARENT_REPO: "portfolio"
  _SUBMODULE_PATH: "assets/images/ansible-openvpn" # adjust this path

options:
  logging: CLOUD_LOGGING_ONLY

serviceAccount: "projects/$PROJECT_ID/serviceAccounts/cloud-builder@${PROJECT_ID}.iam.gserviceaccount.com"

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/github_token/versions/latest
      env: "GITHUB_TOKEN"
